// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetEventsForMonthHandlerFunc turns a function with the right signature into a get events for month handler
type GetEventsForMonthHandlerFunc func(GetEventsForMonthParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetEventsForMonthHandlerFunc) Handle(params GetEventsForMonthParams) middleware.Responder {
	return fn(params)
}

// GetEventsForMonthHandler interface for that can handle valid get events for month params
type GetEventsForMonthHandler interface {
	Handle(GetEventsForMonthParams) middleware.Responder
}

// NewGetEventsForMonth creates a new http.Handler for the get events for month operation
func NewGetEventsForMonth(ctx *middleware.Context, handler GetEventsForMonthHandler) *GetEventsForMonth {
	return &GetEventsForMonth{Context: ctx, Handler: handler}
}

/*
	GetEventsForMonth swagger:route GET /events_for_month getEventsForMonth

Show events for month
*/
type GetEventsForMonth struct {
	Context *middleware.Context
	Handler GetEventsForMonthHandler
}

func (o *GetEventsForMonth) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetEventsForMonthParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
