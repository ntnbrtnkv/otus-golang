// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/x-www-form-urlencoded"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Nothing special about it",
    "title": "Calendar server",
    "version": "1.0.0"
  },
  "host": "localhost:1234",
  "paths": {
    "/create_event": {
      "post": {
        "summary": "Creates event",
        "parameters": [
          {
            "$ref": "#/parameters/eventTitle"
          },
          {
            "$ref": "#/parameters/eventDescription"
          },
          {
            "$ref": "#/parameters/eventStart"
          },
          {
            "$ref": "#/parameters/eventEnd"
          }
        ],
        "responses": {
          "201": {
            "description": "Created successfully"
          },
          "400": {
            "description": "Failed to create event",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/delete_event": {
      "post": {
        "summary": "Delete event",
        "parameters": [
          {
            "$ref": "#/parameters/eventID"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successfully"
          },
          "400": {
            "description": "Failed to delete event",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/events_for_day": {
      "get": {
        "summary": "Show events for day",
        "parameters": [
          {
            "type": "string",
            "format": "date",
            "name": "day",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "schema": {
              "$ref": "#/definitions/events"
            }
          }
        }
      }
    },
    "/events_for_month": {
      "get": {
        "summary": "Show events for month",
        "parameters": [
          {
            "type": "string",
            "format": "date",
            "name": "month",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "schema": {
              "$ref": "#/definitions/events"
            }
          }
        }
      }
    },
    "/events_for_week": {
      "get": {
        "summary": "Show events for week",
        "parameters": [
          {
            "type": "string",
            "format": "date",
            "name": "week",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "schema": {
              "$ref": "#/definitions/events"
            }
          }
        }
      }
    },
    "/update_event": {
      "post": {
        "summary": "Update event",
        "parameters": [
          {
            "$ref": "#/parameters/eventID"
          },
          {
            "$ref": "#/parameters/eventTitle"
          },
          {
            "$ref": "#/parameters/eventDescription"
          },
          {
            "$ref": "#/parameters/eventStart"
          },
          {
            "$ref": "#/parameters/eventEnd"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated successfully"
          },
          "400": {
            "description": "Failed to update event",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "event": {
      "type": "object",
      "required": [
        "title",
        "description",
        "time_end",
        "time_start"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "time_end": {
          "type": "string",
          "format": "date-time"
        },
        "time_start": {
          "type": "string",
          "format": "date-time"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "events": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/event"
          }
        }
      }
    }
  },
  "parameters": {
    "eventDescription": {
      "type": "string",
      "name": "description",
      "in": "formData",
      "required": true
    },
    "eventEnd": {
      "type": "string",
      "format": "date-time",
      "name": "time_end",
      "in": "formData",
      "required": true
    },
    "eventID": {
      "type": "string",
      "name": "id",
      "in": "formData",
      "required": true
    },
    "eventStart": {
      "type": "string",
      "format": "date-time",
      "name": "time_start",
      "in": "formData",
      "required": true
    },
    "eventTitle": {
      "type": "string",
      "name": "title",
      "in": "formData",
      "required": true
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/x-www-form-urlencoded"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Nothing special about it",
    "title": "Calendar server",
    "version": "1.0.0"
  },
  "host": "localhost:1234",
  "paths": {
    "/create_event": {
      "post": {
        "summary": "Creates event",
        "parameters": [
          {
            "type": "string",
            "name": "title",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "description",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "time_start",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "time_end",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created successfully"
          },
          "400": {
            "description": "Failed to create event",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/delete_event": {
      "post": {
        "summary": "Delete event",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successfully"
          },
          "400": {
            "description": "Failed to delete event",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/events_for_day": {
      "get": {
        "summary": "Show events for day",
        "parameters": [
          {
            "type": "string",
            "format": "date",
            "name": "day",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "schema": {
              "$ref": "#/definitions/events"
            }
          }
        }
      }
    },
    "/events_for_month": {
      "get": {
        "summary": "Show events for month",
        "parameters": [
          {
            "type": "string",
            "format": "date",
            "name": "month",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "schema": {
              "$ref": "#/definitions/events"
            }
          }
        }
      }
    },
    "/events_for_week": {
      "get": {
        "summary": "Show events for week",
        "parameters": [
          {
            "type": "string",
            "format": "date",
            "name": "week",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "schema": {
              "$ref": "#/definitions/events"
            }
          }
        }
      }
    },
    "/update_event": {
      "post": {
        "summary": "Update event",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "title",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "description",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "time_start",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "time_end",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Updated successfully"
          },
          "400": {
            "description": "Failed to update event",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "event": {
      "type": "object",
      "required": [
        "title",
        "description",
        "time_end",
        "time_start"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true
        },
        "time_end": {
          "type": "string",
          "format": "date-time"
        },
        "time_start": {
          "type": "string",
          "format": "date-time"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "events": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/event"
          }
        }
      }
    }
  },
  "parameters": {
    "eventDescription": {
      "type": "string",
      "name": "description",
      "in": "formData",
      "required": true
    },
    "eventEnd": {
      "type": "string",
      "format": "date-time",
      "name": "time_end",
      "in": "formData",
      "required": true
    },
    "eventID": {
      "type": "string",
      "name": "id",
      "in": "formData",
      "required": true
    },
    "eventStart": {
      "type": "string",
      "format": "date-time",
      "name": "time_start",
      "in": "formData",
      "required": true
    },
    "eventTitle": {
      "type": "string",
      "name": "title",
      "in": "formData",
      "required": true
    }
  }
}`))
}
